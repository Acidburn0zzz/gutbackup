#!/usr/bin/env bash
#
# Summary: Do a backup action
#
# Usage: oldtime backup [options] <profile> [instance] [rsync_options]
#
# [OPTIONS]
#   -d      # oldtime config directory, default is /oldtime
#
# Default working directory is /oldtime/work.
#
# Examples:
#
#   oldtime backup hello
#   oldtime backup hello vm
#   oldtime backup -d myoldtime hello --dry-run
#

set -e
[[ -n "$OLDTIME_DEBUG" ]] && set -x

source "$OLDTIME_ROOT/libexec/lib.sh"
source "$OLDTIME_ROOT/libexec/helpers.sh"

# parse file and write each section to files
# parse_file(file) -> files_cmd "--files-from files"
parse_file() {
	awk '
		NR == 1 { next }

		# skip comment
		/^ *#/ { next }

		/^ *\[.*\] *$/ {  
			begin = 1
			title = substr($0, 2, length($0)-2)
			gsub(/^[ \t]*|[ \t]*$/, "", title) # strip
			next
		}

		begin == 1 { 
			content[title] = content[title] $0 "\n"
		}

		END {
			for (k in content) {
				print content[k] > "tmp/" k
				cmd = cmd sprintf("--%s-from tmp/%s ", k, k)
			}
			printf "%s", cmd
		}
	' "$1"
}

invoke_rsync() {
	rm -f tmp/*
	files_cmd=$(parse_file "$1")
	end_cmd=$(sed "1s~\$SRC~$SRC~;s~\$DEST~$DEST~;q" "$1")
	cmd="$files_cmd $BACKUP_OPTIONS $RSYNC_OPTIONS $end_cmd"
	echo ">> rsync $cmd"
	rsync $cmd
}

# for conf file
# brsnc(filename)
brsync() {
	file="$profile_dir/$1"

	if [[ ! -e "$file" ]]; then
		echo "oldtime: file does not exists -- $file" >&2
		exit 1
	fi

	invoke_rsync "$file"
}


#####
# Main
#####

if [[ -z "$1" ]]; then
  oldtime-help --usage backup >&2
  exit 1
fi

while getopts "d:" opt; do
	case $opt in
		d ) OLDTIME_DIR=$OPTARG ;;
	esac
done
shift $(( OPTIND - 1 ))

profile="$1"
instance="$2"
conf="$OLDTIME_DIR/$profile.conf"
profile_dir=$(absolutename "$OLDTIME_DIR/$profile")

if [[ ! -e "$conf" ]]; then 
	echo "oldtime: config file doesn't exists -- $conf " >&2
	exit 1
fi

[[ ! -d "$OLDTIME_DIR/work" ]] && mkdir "$OLDTIME_DIR/work"
[[ ! -d "$OLDTIME_DIR/work/tmp" ]] && mkdir "$OLDTIME_DIR/work/tmp"

if [[ -z "$instance" ]]; then
	backup_func="backup"
	shift
else
	backup_func="backup_$instance"
	eval "
		$backup_func(){
			brsync $instance
		}"
	shift 2
fi
RSYNC_OPTIONS="$*"

echo ">> Load $conf" 
source "$conf"

if [[ $(type -t "$backup_func") != "function" ]]; then
	echo "oldtime: function \`$backup_func' not defined."
	exit 1
fi

cd "$OLDTIME_DIR/work"
before
$backup_func
after
cd "$OLDPWD"
